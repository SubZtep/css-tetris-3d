* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  background: #000;
}

.crosshair {
  background:
    linear-gradient(#003,#003),
    linear-gradient(#003,#003),
    #000;
  background-position:center;
  background-size: 100% 1px,1px 100%;
  background-repeat:no-repeat;
}

.container {
  width: 100vw;
  height: 100vh;
  display: flex;
  cursor: crosshair;
  align-items: center;
  justify-content: center;

  perspective: var(--perspective);
  perspective-origin: calc(100% - var(--mouseX)) calc(100% - var(--mouseY));
}


.front {
  transform: translateZ(var(--edge));
}
.back {
}
.right {
  transform-origin: right;
  transform: rotateY(90deg);
}
.left {
  transform-origin: left;
  transform: rotateY(-90deg);
}
.top {
  transform-origin: top;
  transform: rotateX(90deg);
}
.bottom {
  transform-origin: bottom;
  transform: rotateX(-90deg);
}

.level {
  background-color: #000300;
  transform-style: preserve-3d;

  --dimension: calc(max(var(--cols), var(--rows)) * var(--edge));
  width: var(--dimension);
  height: var(--dimension);

  .side {
    width: 100%;
    height: 100%;

    display: grid;
    position: absolute;

    > div {
      border: 1px solid #010;
    }
    .floor-0 {
      border: 1px solid #020;
    }
    .floor-1 {
      border: 1px solid #030;
    }
    .floor-2 {
      border: 1px solid #040;
    }
    .floor-3 {
      border: 1px solid #050;
    }

    &.back {
      grid-template-columns: repeat(var(--cols), 1fr);
      grid-template-rows: repeat(var(--rows), 1fr);
    }
    &.left, &.right {
      grid-template-columns: repeat(var(--floor), 1fr);
      grid-template-rows: repeat(var(--rows), 1fr);
    }
    &.top, &.bottom {
      grid-template-columns: repeat(var(--cols), 1fr);
      grid-template-rows: repeat(var(--floor), 1fr);
    }
  }
}

.cube {
  transform-style: preserve-3d;
  transform: translateX(var(--translateX)) translateY(var(--translateY)) rotateX(var(--rotateX)) rotateZ(var(--rotateZ));
  transition: 300ms ease-out;
  width: 100%;
  height: 100%;

  > div {
    width: inherit;
    height: inherit;
    position: absolute;
    background-color: #f00a;
    border: 1px solid #000;
    border-radius: var(--radius);
    transition: border-radius 200ms ease-out;
  }

  &:nth-of-type(1) {
    grid-area: a;
  }
  &:nth-of-type(2) {
    grid-area: b;
  }
  &:nth-of-type(3) {
    grid-area: c;
  }
  &:nth-of-type(4) {
    grid-area: d;
  }
}

.block {
  width: calc(var(--edge) * 4);
  height: calc(var(--edge) * 4);
  transform-style: preserve-3d;
  transform: translateZ(var(--translateZ));
  transition: 300ms ease-in-out;

  display: grid;
  grid-template-areas:
    "a b . ."
    ". c d ."
    ". . . ."
    ". . . ."
}
